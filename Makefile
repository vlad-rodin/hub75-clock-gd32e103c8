BUILD_DIR ?= .build
FAMILY    ?= gd32e1x

SHELL := bash

## Find
HDRS += $(patsubst ./%,%,$(shell find -name "*.h"))
SRCS += $(patsubst ./%,%,$(shell find -name "*.c"))
ASMS += $(patsubst ./%,%,$(shell find -name "*.s"))
SCRS += $(patsubst ./%.m,%,$(shell find -name "*.m"))
HDRS += $(patsubst %,${BUILD_DIR}/%.h,${SCRS})
HDR_DIRS += $(patsubst %,%/,$(shell dirname ${HDRS} | sort -u))

OBJS += $(patsubst %,${BUILD_DIR}/%.o,${SRCS})
OBJS += $(patsubst %,${BUILD_DIR}/%.o,${ASMS})
OBJ_DIRS += $(patsubst %,%/,$(shell dirname ${OBJS} | sort -u))

## Linker
LINKER  := $(shell find -name "*.ld")
LDFLAGS += -T${LINKER}
LDFLAGS += -Wl,--gc-sections

## Compiler
CFLAGS += $(patsubst %,-I%,${HDR_DIRS})
CFLAGS += -I.
CFLAGS += -mcpu=cortex-m4
CFLAGS += -mthumb
CFLAGS += -mfloat-abi=soft
CFLAGS += -Wall
CFLAGS += -g
CFLAGS += -ggdb
CFLAGS += -gdwarf-2
CFLAGS += -g3
CFLAGS += -O2
CFLAGS += -ffunction-sections
CFLAGS += -fdata-sections
CFLAGS += -flto

## Toolchain
CC      := arm-none-eabi-gcc
SIZE    := arm-none-eabi-size
OBJCOPY := arm-none-eabi-objcopy

## Style
STYLE_CMD := "\\e[0\;33m"
STYLE_ERR := "\\e[0\;31m"
STYLE_OUT := "\\e[0\;32m"
STYLE_OFF := "\\e[0m"

## Targets
.PHONY: clean unlock write
.PRECIOUS: ${BUILD_DIR}/%.c.o ${BUILD_DIR}/%.s.o ${BUILD_DIR}/%.h %/
.NOTPARALLEL: clean write

## Default
all: ${BUILD_DIR}/main.elf

## HEX
%.hex: %.elf
	@echo -e "${STYLE_CMD} - Generating $@ file...${STYLE_ERR}"
	@${OBJCOPY} -O ihex $< $@
	@echo -en "${STYLE_OFF}"

## Linking
${BUILD_DIR}/%.elf: ${OBJS} ${LINKER}
	@echo -e "${STYLE_CMD} - Linking...${STYLE_ERR}"
	@${CC} ${CFLAGS} ${LDFLAGS} -o $@ ${OBJS}
	@echo -en "${STYLE_OUT}"
	@${SIZE} $@
	@echo -en "${STYLE_OFF}"

## Compiling
${BUILD_DIR}/%.c.o: %.c Makefile ${HDRS} | ${OBJ_DIRS}
	@echo -e "${STYLE_CMD} - Compiling $< into object file${STYLE_ERR}"
	@${CC} -c ${CFLAGS} -o $@ $<
	@echo -en "${STYLE_OFF}"

## Assembling
${BUILD_DIR}/%.s.o: %.s Makefile | ${OBJ_DIRS}
	@echo -e "${STYLE_CMD} - Assembling $< into object file${STYLE_ERR}"
	@${CC} -c ${CFLAGS} -o $@ $<
	@echo -en "${STYLE_OFF}"

## Running Octave scripts
${BUILD_DIR}/%.h: %.m Makefile | ${HDR_DIRS}
	@echo -e "${STYLE_CMD} - Generating $@${STYLE_ERR}"
	@./$< $@
	@echo -en "${STYLE_OFF}"

## Directory
%/:
	@echo -e "${STYLE_CMD} - Creating new $@ directory${STYLE_ERR}"
	@mkdir -p $@
	@echo -en "${STYLE_OFF}"

## Phony
clean:
	@echo -e "${STYLE_CMD} - Removing all autogenerated files...${STYLE_ERR}"
	@rm -rf ${BUILD_DIR}
	@echo -en "${STYLE_OFF}"

OPENOCD_CFG := -f "interface/stlink.cfg" -f "${FAMILY}.cfg"
OPENOCD_BGN := -c "reset_config srst_only connect_assert_srst" -c "init" -c "reset halt"
OPENOCD_END := -c "reset run" -c "exit"

unlock:
	@echo -e "${STYLE_CMD} - Unlocking...${STYLE_OFF}"
	@openocd ${OPENOCD_CFG} ${OPENOCD_BGN} -c "stm32f1x unlock 0" ${OPENOCD_END}

write: ${BUILD_DIR}/main.hex
	@echo -e "${STYLE_CMD} - Writing FLASH...${STYLE_OFF}"
	@openocd ${OPENOCD_CFG} ${OPENOCD_BGN} -c "flash write_image unlock erase $< 0x00000000" ${OPENOCD_END}
